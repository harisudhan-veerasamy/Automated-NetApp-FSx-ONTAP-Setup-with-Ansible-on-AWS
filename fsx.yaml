---
- name: Create FSx for NetApp ONTAP with AWS CLI
  hosts: localhost
  gather_facts: yes
  tasks:

    - name: Get Default VPC
      amazon.aws.ec2_vpc_net_info:
        filters:
          is-default: true
      register: default_vpc

    - name: Get Default Subnet
      amazon.aws.ec2_vpc_subnet_info:
        filters:
          vpc-id: "{{ default_vpc.vpcs[0].vpc_id }}"
      register: default_subnet

    - name: Create or Get Security Group
      amazon.aws.ec2_security_group:
        name: "fsx-sg-ansible"
        description: "FSx Security Group"
        vpc_id: "{{ default_vpc.vpcs[0].vpc_id }}"
        rules:
          - proto: tcp
            from_port: 2049
            to_port: 2049
            group_id: "sg-0dc01264c3568dd53" # Replace with your actual SG ID if needed
          - proto: tcp
            from_port: 445
            to_port: 445
            group_id: "sg-0dc01264c3568dd53"
          - proto: tcp
            from_port: 111
            to_port: 111
            group_id: "sg-0dc01264c3568dd53" 
        rules_egress:
          - proto: "-1"
            cidr_ip: "0.0.0.0/0"
        state: present
      register: fsx_sg

    - name: Create FSx for NetApp ONTAP Using AWS CLI
      ansible.builtin.command: >-
        aws fsx create-file-system
        --region us-east-1
        --file-system-type ONTAP
        --storage-capacity 1024
        --subnet-ids {{ default_subnet.subnets[0].subnet_id }}
        --security-group-ids {{ fsx_sg.group_id }}
        --storage-type SSD
        --tags Key=Name,Value=fsx-ansible
        --ontap-configuration '{"DeploymentType": "SINGLE_AZ_1","ThroughputCapacity": 512,"AutomaticBackupRetentionDays": 7,"DailyAutomaticBackupStartTime": "02:00","DiskIopsConfiguration": {"Mode": "AUTOMATIC"}}'
      register: fsx_creation_result

    - name: Extract FSx FileSystem ID
      set_fact:
        fsx_id: "{{ fsx_creation_result.stdout | regex_search('\"FileSystemId\": \"(fs-[a-z0-9]+)\"', '\\1') | first }}"

    - name: Wait for FSx to become available
      ansible.builtin.command: >
        aws fsx describe-file-systems --file-system-ids {{ fsx_id }} --query 'FileSystems[0].Lifecycle'
      register: fsx_status
      until: fsx_status.stdout.find("AVAILABLE") != -1
      retries: 20
      delay: 60

    - name: Create Storage Virtual Machine (SVM)
      ansible.builtin.command: >
        aws fsx create-storage-virtual-machine
        --region us-east-1
        --file-system-id {{ fsx_id }}
        --name svm_default
        --root-volume-security-style UNIX
      register: svm_creation

    - name: Extract SVM ID
      set_fact:
        svm_id: "{{ svm_creation.stdout | regex_search('\"StorageVirtualMachineId\": \"(svm-[a-z0-9]+)\"', '\\1') | first }}"

    - name: Create Volume with Storage Efficiency and SnapLock (Fixed)
      ansible.builtin.command: >-
        aws fsx create-volume
        --region us-east-1
        --name vol1
        --volume-type ONTAP
        --ontap-configuration '{"StorageVirtualMachineId": "{{ svm_id }}","JunctionPath": "/vol1","SizeInMegabytes": 500,"SnapshotPolicy": "default","StorageEfficiencyEnabled": true,"OntapVolumeType": "RW"}'
      register: fsx_volume